/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.Color;
import java.lang.management.ManagementFactory; // Essa é a classe que vai nos trazer informações do sistema!
import java.text.DecimalFormat;
import java.util.Random;
import javax.swing.UIManager;   //Classe do UI (user interface) Manager
import javax.swing.plaf.ColorUIResource; //Aqui importamos o recurso das cores do UIManager

/**
 *
 * @author Aluno
 */
public class TestandoVisu extends javax.swing.JFrame {
  
   
    /**
     * Creates new form TestandoVisu
     */
    public TestandoVisu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressCPU = new javax.swing.JProgressBar();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jProgressDisk = new javax.swing.JProgressBar();
        jProgressMemory = new javax.swing.JProgressBar();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        btnLeitura = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblPorcMemoria = new javax.swing.JLabel();
        lblUser = new javax.swing.JLabel();
        lblSO = new javax.swing.JLabel();
        lblArch = new javax.swing.JLabel();
        lblVersion = new javax.swing.JLabel();
        lblTotalRam = new javax.swing.JLabel();
        lblFreeRam = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        lblMin = new javax.swing.JLabel();
        lblMed = new javax.swing.JLabel();
        lblMax = new javax.swing.JLabel();
        lblMinDisco = new javax.swing.JLabel();
        lblMedDisco = new javax.swing.JLabel();
        lblMaxDisco = new javax.swing.JLabel();
        lblMinMem = new javax.swing.JLabel();
        lblMedMem = new javax.swing.JLabel();
        lblMaxMem = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("CPU");

        jLabel10.setForeground(new java.awt.Color(0, 204, 102));
        jLabel10.setText("Min:");

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Média:");

        jLabel12.setForeground(new java.awt.Color(255, 0, 0));
        jLabel12.setText("Max:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Disco");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Memória");

        jLabel15.setForeground(new java.awt.Color(0, 204, 0));
        jLabel15.setText("Min:");

        jLabel16.setText("Média:");

        jLabel17.setForeground(new java.awt.Color(255, 51, 0));
        jLabel17.setText("Max:");

        jLabel18.setForeground(new java.awt.Color(51, 204, 0));
        jLabel18.setText("Min:");

        jLabel19.setText("Média:");

        jLabel20.setForeground(new java.awt.Color(255, 0, 0));
        jLabel20.setText("Max:");

        btnLeitura.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnLeitura.setText("Fazer leitura de Dados");
        btnLeitura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLeituraActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Informações do sistema");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(0, 153, 153));

        jLabel2.setText("Usuário:");

        jLabel3.setText("Sistema Operacional:");

        jLabel4.setText("Arquitetura:");

        jLabel5.setText("Versão do Sistema Operacional:");

        jLabel6.setText("RAM Total:");

        jLabel7.setText("RAM Livre:");

        lblPorcMemoria.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        lblUser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUser.setText("--");

        lblSO.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSO.setText("--");

        lblArch.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblArch.setText("--");

        lblVersion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblVersion.setText("--");

        lblTotalRam.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTotalRam.setText("--");

        lblFreeRam.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFreeRam.setText("--");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPorcMemoria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblUser, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                            .addComponent(lblSO, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(197, 197, 197)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblFreeRam, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                            .addComponent(lblTotalRam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblArch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblVersion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lblSO))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lblArch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(lblVersion))
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(lblTotalRam))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(lblFreeRam))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblPorcMemoria)
                .addContainerGap())
        );

        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Essas informações correspondem a valores (aproximados) reais do seu sistema");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblMin.setText("0");

        lblMed.setText("0");

        lblMax.setText("0");

        lblMinDisco.setText("0");

        lblMedDisco.setText("0");

        lblMaxDisco.setText("0");

        lblMinMem.setText("0");

        lblMedMem.setText("0");

        lblMaxMem.setText("0");

        jLabel8.setFont(new java.awt.Font("Yu Gothic Light", 1, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Simulação:");

        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("Aqui são os valores simulados conforme pedido");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jProgressMemory, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblMin)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblMed)
                                .addGap(112, 112, 112)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblMax)
                                .addGap(44, 44, 44))
                            .addComponent(jProgressCPU, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jProgressDisk, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblMinDisco, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblMedDisco)
                                .addGap(113, 113, 113)
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblMaxDisco)
                                .addGap(41, 41, 41))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel14))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblMinMem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblMedMem)
                        .addGap(115, 115, 115)
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblMaxMem)
                        .addGap(50, 50, 50))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnLeitura)
                        .addGap(150, 150, 150))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel23)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel22)
                .addGap(13, 13, 13)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressCPU, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(lblMin)
                    .addComponent(lblMed)
                    .addComponent(lblMax))
                .addGap(18, 18, 18)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressDisk, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(lblMinDisco)
                    .addComponent(lblMedDisco)
                    .addComponent(lblMaxDisco))
                .addGap(18, 18, 18)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressMemory, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel19)
                    .addComponent(jLabel20)
                    .addComponent(lblMinMem)
                    .addComponent(lblMedMem)
                    .addComponent(lblMaxMem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(btnLeitura, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    Random gerador = new Random();     
    
    //Para ser sincera eu não fazia a menor idéia que valores colocar para o valor máximo de cada um
    //Então coloquei o que me veio a mente
    //Variáveis para os valores da CPU
    Integer numCPU, maiorCPU = 0, menorCPU = 1000, mediaCPU = 0, somaCPU = 0, iC = 0;
    
    //Variáveis para os valores de Disco
    Integer numDisco, maiorDisco = 0, menorDisco = 2000, mediaDisco = 0, somaDisco = 0, iD = 0;
    
    //Variáveis para os valores da Memória 
    Integer numMem, maiorMem = 0, menorMem = 1000, mediaMem = 0, somaMem = 0, iM = 0;
    
    private void btnLeituraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLeituraActionPerformed
        // TODO add your handling code here:
/*Isso tudo ai em baixo é um código muito legal que eu achei e adaptei que faz com que o Java capture
informações sobre seu PC! Eu li que elas não são muito exatas (e não são mesmo, pelo mesmo no meu PC ele 
deu uma confundida nos valores de memória, por isso toda essa adaptação) mas achei muito legal a informação*/
       
         com.sun.management.OperatingSystemMXBean mxbean = 
	(com.sun.management.OperatingSystemMXBean) ManagementFactory.getOperatingSystemMXBean();
       
        lblUser.setText(System.getProperty("user.name").toUpperCase()); // Aqui pegamos o nome do usuário
        lblSO.setText(System.getProperty("os.name").toUpperCase());     //Nome do sistema Operacional
        lblArch.setText(System.getProperty("os.arch").toUpperCase());   //Arquitetura do SO
        lblVersion.setText(System.getProperty("os.version").toUpperCase()); //Versão do SO
        
        DecimalFormat df = new DecimalFormat("0,0");
        //Vamos pegar o total da memória
        String memoriaTotal = df.format(mxbean.getTotalPhysicalMemorySize()/ 100000000 - 5); 
        /*Isso aqui foi uma adaptação que fiz! Não sabia como fazer notação cientifica aqui e ele me devolve o valor em bytes e eu queria em GigaBytes
          Esse -5 também foi adaptação!, como eu disse ele não me dava valor muito exatos, tinha uma variação de 5, daí só subtrai ela
          Ah e String pq ele dava erro ao mandar direto fazendo como Double
         
        Agora vamos pegar a quantia de memória livre! e mesma coisa da notação cientifica alternativa*/
        String memoriaLivre = df.format(mxbean.getFreePhysicalMemorySize() / 100000000); 
       
        //Beleza, Memoria Ocupada = o valor da memoria total - quanto de memoria temos livre
        Double memoriaOcupada = Double.valueOf(memoriaTotal) - Double.valueOf(memoriaLivre);
        //Mas eu queira que mostrasse isso em porcentagem então fiz *100
        Double porcentagemOcupada = (memoriaOcupada / Double.valueOf(memoriaTotal)) * 100;
        
 
        //Aqui só nossos prints
        lblTotalRam.setText(memoriaTotal + "Gb");
        lblFreeRam.setText(memoriaLivre + "Gb");
        lblPorcMemoria.setText(String.format("Estamos com %.2f%s de memória em uso!", porcentagemOcupada, "%"));
        

        
        
      //Configurações para Barra da CPU  
       jProgressCPU.setMaximum(1000); //Setei o máximo que a barra podia chegar
       jProgressCPU.setMinimum(0);   //Mínimo
  
       jProgressCPU.setBackground(Color.blue);
       jProgressCPU.setStringPainted(true); // E a string na barra
       
      
      //Configurações para Barra do Disco
       jProgressDisk.setMaximum(2000);
       jProgressDisk.setMinimum(0);
       jProgressDisk.setStringPainted(true);
       
      //Configurações para Barra da Memoria
       jProgressMemory.setMaximum(1000);
       jProgressMemory.setMinimum(0);
       jProgressMemory.setStringPainted(true);
         

       //-------- Processo para os valores da CPU -------------
       
       
       numCPU = gerador.nextInt(1000);  //Só aleatoriza até 1000
       somaCPU = somaCPU + numCPU;      //Aqui vou somar todos os valores que me aleatorizar
       
       jProgressCPU.setValue(numCPU); //Setando o valor da barra
      
        if(numCPU > maiorCPU){        //Se o numero aleatorio de agora for maior que o último guardado na
                                        //variável maiorCPU
                    maiorCPU = numCPU;  //Então o maior número de CPU é o valor aleatorio de agora
              
                }
        
        if(numCPU < menorCPU){         //Mesma lógica mas inversa, se for menor que o atual valor em menorCPU
                                        //então atribui 
                    menorCPU = numCPU;             
                }   
       iC += 1;                       //E avisa(soma mais um) nosso contador que mais um número foi aleatorizado
       mediaCPU = somaCPU / iC;      //A média é o valor total somado de todos os valores aleatorizados até agora
                                     // dividido pela quantia de números que foram aleatorizados até o momento
      
       //Aqui só meus prints
       lblMin.setText(String.valueOf(menorCPU));
       lblMax.setText(String.valueOf(maiorCPU)); 
       lblMed.setText(String.valueOf(mediaCPU)); 
//Fim dos processos dos valores da CPU


        //--------Processo para os valores de Disco  -------------
           //Aqui a lógica se repete para todos, só mudando os nomes
       numDisco = gerador.nextInt(1000);  
       somaDisco = somaDisco + numDisco;
       
       jProgressDisk.setValue(numDisco); //Barra 
      
        if(numDisco > maiorDisco){
                    maiorDisco = numDisco;
              
                }
        
        if(numDisco < menorDisco){
                    menorDisco = numDisco;             
                }   
       iD += 1; 
       mediaDisco = somaDisco / iD;
      
       lblMinDisco.setText(String.valueOf(menorDisco));
       lblMaxDisco.setText(String.valueOf(maiorDisco)); //Meus prints
       lblMedDisco.setText(String.valueOf(mediaDisco)); 
//Fim dos processos dos valores do DISCO


        //--------Processo para os valores da Memória  -------------            
                    //Só aleatoriza
       numMem = gerador.nextInt(1000);  
       somaMem = somaMem + numMem;
       
       jProgressMemory.setValue(numMem); //Barra 
      
        if(numMem > maiorMem){
                    maiorMem = numMem;
              
                }
        
        if(numMem < menorMem){
                    menorMem = numMem;             
                }   
       iM += 1; 
       mediaMem = somaMem / iM;
      
       lblMinMem.setText(String.valueOf(menorMem));
       lblMaxMem.setText(String.valueOf(maiorMem)); //Meus prints
       lblMedMem.setText(String.valueOf(mediaMem)); 
//Fim dos processos dos valores de MEMORIA
                        
            
        
    }//GEN-LAST:event_btnLeituraActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        
    //E aqui mudamos a cor das nossas barrinhas    
   ColorUIResource colorResource = new ColorUIResource(Color.decode("#28df99").darker()); 
   /*Esses "darker" servem pra fazer a transição do degrade na cor da barra, sem ele a cor fica muito "rígida" e não gostei do resultado
   //daí procurei e achei esse método e achei bem´prático e simples*/
    UIManager.put("nimbusOrange",colorResource);
    //Referência: https://stackoverflow.com/questions/11802887/nimbus-lf-change-background-color-of-progress-bar
   
   
    
    
   
        	
	//System.out.println("Memoria disponivel : " + mxbean.getFreePhysicalMemorySize() +  " MegaBytes");
    
        
    
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestandoVisu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new TestandoVisu().setVisible(true);
            
             });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLeitura;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JProgressBar jProgressCPU;
    private javax.swing.JProgressBar jProgressDisk;
    private javax.swing.JProgressBar jProgressMemory;
    private javax.swing.JLabel lblArch;
    private javax.swing.JLabel lblFreeRam;
    private javax.swing.JLabel lblMax;
    private javax.swing.JLabel lblMaxDisco;
    private javax.swing.JLabel lblMaxMem;
    private javax.swing.JLabel lblMed;
    private javax.swing.JLabel lblMedDisco;
    private javax.swing.JLabel lblMedMem;
    private javax.swing.JLabel lblMin;
    private javax.swing.JLabel lblMinDisco;
    private javax.swing.JLabel lblMinMem;
    private javax.swing.JLabel lblPorcMemoria;
    private javax.swing.JLabel lblSO;
    private javax.swing.JLabel lblTotalRam;
    private javax.swing.JLabel lblUser;
    private javax.swing.JLabel lblVersion;
    // End of variables declaration//GEN-END:variables
}
